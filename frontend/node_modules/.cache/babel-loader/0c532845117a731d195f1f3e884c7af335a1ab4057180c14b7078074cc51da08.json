{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soham\\\\Downloads\\\\JantaVoice\\\\frontend\\\\src\\\\pages\\\\VoiceComplaint.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VoiceComplaint() {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [complaintId, setComplaintId] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const appendLog = line => {\n    setLogs(prev => [...prev, line]);\n  };\n  const handleVoiceComplaint = async () => {\n    setLoading(true);\n    setLogs([\"üéôÔ∏è Voice complaint started...\"]);\n    setSubmitted(false);\n    setComplaintId(null);\n    try {\n      // 1. Trigger the Python voice bot and get structured data\n      const voiceRes = await axios.get(\"http://localhost:5000/api/voice-complaint\");\n      if (voiceRes.data.status !== \"success\") {\n        appendLog(\"‚ùå Voice bot error: \" + voiceRes.data.message);\n        return;\n      }\n      const complaintData = voiceRes.data.data;\n      appendLog(\"‚úÖ Voice bot finished. Data:\");\n      appendLog(JSON.stringify(complaintData, null, 2));\n\n      // 2. Send that same data to the complaints endpoint\n      const formRes = await axios.post(\"http://localhost:5000/api/complaint\", {\n        name: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"] || complaintData.name,\n        complaint: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"] || complaintData.complaint,\n        location: complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"] || complaintData.location\n        // map any other fields if needed\n      });\n\n      // 3. Capture and display the Complaint ID\n      const newId = formRes.data.complaintId || formRes.data.complaintId;\n      setComplaintId(newId);\n      setSubmitted(true);\n      appendLog(`üì¨ Complaint submitted. ID: ${newId}`);\n    } catch (err) {\n      appendLog(\"‚ùå Error: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Voice Complaint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVoiceComplaint,\n      disabled: loading,\n      className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50\",\n      children: loading ? \"Processing...\" : \"Start Voice Complaint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 bg-gray-900 text-green-200 p-4 rounded font-mono h-48 overflow-y-scroll\",\n      children: logs.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: line\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 text-green-700 font-semibold\",\n      children: [\"Complaint submitted successfully!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 44\n      }, this), \"Your Complaint ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-bold\",\n        children: complaintId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(VoiceComplaint, \"XRUUZp/E5ruB2VLYF7IwAMT576U=\");\n_c = VoiceComplaint;\nvar _c;\n$RefreshReg$(_c, \"VoiceComplaint\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","VoiceComplaint","_s","logs","setLogs","loading","setLoading","complaintId","setComplaintId","submitted","setSubmitted","appendLog","line","prev","handleVoiceComplaint","voiceRes","get","data","status","message","complaintData","JSON","stringify","formRes","post","name","complaint","location","newId","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","i","_c","$RefreshReg$"],"sources":["C:/Users/soham/Downloads/JantaVoice/frontend/src/pages/VoiceComplaint.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function VoiceComplaint() {\r\n  const [logs, setLogs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [complaintId, setComplaintId] = useState(null);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const appendLog = (line) => {\r\n    setLogs((prev) => [...prev, line]);\r\n  };\r\n\r\n  const handleVoiceComplaint = async () => {\r\n    setLoading(true);\r\n    setLogs([\"üéôÔ∏è Voice complaint started...\"]);\r\n    setSubmitted(false);\r\n    setComplaintId(null);\r\n\r\n    try {\r\n      // 1. Trigger the Python voice bot and get structured data\r\n      const voiceRes = await axios.get(\"http://localhost:5000/api/voice-complaint\");\r\n      if (voiceRes.data.status !== \"success\") {\r\n        appendLog(\"‚ùå Voice bot error: \" + voiceRes.data.message);\r\n        return;\r\n      }\r\n\r\n      const complaintData = voiceRes.data.data;\r\n      appendLog(\"‚úÖ Voice bot finished. Data:\");\r\n      appendLog(JSON.stringify(complaintData, null, 2));\r\n\r\n      // 2. Send that same data to the complaints endpoint\r\n      const formRes = await axios.post(\r\n        \"http://localhost:5000/api/complaint\",\r\n        {\r\n          name: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"] || complaintData.name,\r\n          complaint: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"] || complaintData.complaint,\r\n          location: complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"] || complaintData.location,\r\n          // map any other fields if needed\r\n        }\r\n      );\r\n\r\n      // 3. Capture and display the Complaint ID\r\n      const newId = formRes.data.complaintId || formRes.data.complaintId;\r\n      setComplaintId(newId);\r\n      setSubmitted(true);\r\n      appendLog(`üì¨ Complaint submitted. ID: ${newId}`);\r\n    } catch (err) {\r\n      appendLog(\"‚ùå Error: \" + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n      <h2 className=\"text-2xl font-semibold mb-4\">Voice Complaint</h2>\r\n      <button\r\n        onClick={handleVoiceComplaint}\r\n        disabled={loading}\r\n        className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50\"\r\n      >\r\n        {loading ? \"Processing...\" : \"Start Voice Complaint\"}\r\n      </button>\r\n\r\n      <div className=\"mt-6 bg-gray-900 text-green-200 p-4 rounded font-mono h-48 overflow-y-scroll\">\r\n        {logs.map((line, i) => (\r\n          <div key={i}>{line}</div>\r\n        ))}\r\n      </div>\r\n\r\n      {submitted && (\r\n        <div className=\"mt-6 text-green-700 font-semibold\">\r\n          Complaint submitted successfully!<br />\r\n          Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}