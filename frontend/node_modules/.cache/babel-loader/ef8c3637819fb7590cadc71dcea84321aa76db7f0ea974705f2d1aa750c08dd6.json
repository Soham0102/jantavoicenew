{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soham\\\\Downloads\\\\JantaVoice\\\\frontend\\\\src\\\\pages\\\\VoiceComplaint.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// export default function VoiceComplaint() {\n//   const [logs, setLogs] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [complaintId, setComplaintId] = useState(null);\n//   const [submitted, setSubmitted] = useState(false);\n\n//   const appendLog = (line) => {\n//     setLogs((prev) => [...prev, line]);\n//   };\n\n//   const handleVoiceComplaint = async () => {\n//     setLoading(true);\n//     setLogs([\"üéôÔ∏è Voice complaint started...\"]);\n//     setSubmitted(false);\n//     setComplaintId(null);\n\n//     try {\n//       // 1. Trigger the Python voice bot and get structured data\n//       const voiceRes = await axios.get(\"http://localhost:5000/api/voice-complaint\");\n//       if (voiceRes.data.status !== \"success\") {\n//         appendLog(\"‚ùå Voice bot error: \" + voiceRes.data.message);\n//         return;\n//       }\n\n//       const complaintData = voiceRes.data.data;\n//       appendLog(\"‚úÖ Voice bot finished. Data:\");\n//       appendLog(JSON.stringify(complaintData, null, 2));\n\n//       // 2. Send that same data to the complaints endpoint\n//       const formRes = await axios.post(\n//         \"http://localhost:5000/api/complaint\",\n//         {\n//           name: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"] || complaintData.name,\n//           complaint: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"] || complaintData.complaint,\n//           location: complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"] || complaintData.location,\n//           // map any other fields if needed\n//         }\n//       );\n\n//       // 3. Capture and display the Complaint ID\n//       const newId = formRes.data.complaintId || formRes.data.complaintId;\n//       setComplaintId(newId);\n//       setSubmitted(true);\n//       appendLog(`üì¨ Complaint submitted. ID: ${newId}`);\n//     } catch (err) {\n//       appendLog(\"‚ùå Error: \" + err.message);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n//       <h2 className=\"text-2xl font-semibold mb-4\">Voice Complaint</h2>\n//       <button\n//         onClick={handleVoiceComplaint}\n//         disabled={loading}\n//         className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50\"\n//       >\n//         {loading ? \"Processing...\" : \"Start Voice Complaint\"}\n//       </button>\n\n//       <div className=\"mt-6 bg-gray-900 text-green-200 p-4 rounded font-mono h-48 overflow-y-scroll\">\n//         {logs.map((line, i) => (\n//           <div key={i}>{line}</div>\n//         ))}\n//       </div>\n\n//       {submitted && (\n//         <div className=\"mt-6 text-green-700 font-semibold\">\n//           Complaint submitted successfully!<br />\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// export default function VoiceComplaint() {\n//   // 1. State mirrors ComplaintForm\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     complaint: \"\",\n//     location: \"\",\n//     urgency: \"normal\",\n//   });\n\n//   const [complaintId, setComplaintId] = useState(null);\n//   const [submitted, setSubmitted] = useState(false);\n//   const [logs, setLogs] = useState([]);\n//   const [loading, setLoading] = useState(false);\n\n//   // helper to append to console‚Äëstyle logs\n//   const appendLog = (line) => setLogs((prev) => [...prev, line]);\n\n//   const handleVoiceComplaint = async () => {\n//     setLoading(true);\n//     setLogs([\"üéôÔ∏è Starting voice complaint...\"]);\n//     setSubmitted(false);\n//     setComplaintId(null);\n\n//     try {\n//       // 2. Trigger your backend voice route\n//       const voiceRes = await axios.get(\"http://localhost:5000/api/voice-complaint\");\n//       if (voiceRes.data.status !== \"success\") {\n//         appendLog(\"‚ùå Voice bot error: \" + voiceRes.data.message);\n//         return;\n//       }\n\n//       // 3. Pull out structured data\n//       const data = voiceRes.data.data;\n//       appendLog(\"‚úÖ Voice data received:\");\n//       appendLog(JSON.stringify(data, null, 2));\n\n//       // // 4. Map it into the exact same formData shape\n//       // const mapped = {\n//       //   name: data[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"] || \"\",\n//       //   location: data[\"‡§∏‡•ç‡§•‡§æ‡§®\"] || \"\",\n//       //   department: data[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"] || \"\",\n//       //   description: data[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"] || \"\",\n//       //   urgency: \"normal\",\n//       // };\n\n//       const aiData = voiceRes.data.data;\n\n//       const payload = {\n//         name: aiData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"] || \"\",\n//         location: aiData[\"‡§∏‡•ç‡§•‡§æ‡§®\"] || \"\",\n//         department: aiData[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"] || \"\",\n//         description: aiData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"] || \"\",\n//       };\n\n//       await axios.post(\"http://localhost:5000/api/complaint\", payload);\n\n//       setFormData(mapped);\n\n//       // 5. POST to the same endpoint as ComplaintForm\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", mapped);\n//       setComplaintId(res.data.complaintId);\n//       setSubmitted(true);\n//       appendLog(`üì¨ Complaint submitted. ID: ${res.data.complaintId}`);\n//     } catch (err) {\n//       appendLog(\"‚ùå Submission error: \" + err.message);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n//       <h2 className=\"text-2xl font-semibold mb-4\">Voice Complaint</h2>\n\n//       {/* Start button */}\n//       <button\n//         onClick={handleVoiceComplaint}\n//         disabled={loading}\n//         className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50\"\n//       >\n//         {loading ? \"Processing...\" : \"Start Voice Complaint\"}\n//       </button>\n\n//       {/* Console logs */}\n//       <div className=\"mt-4 bg-gray-900 text-green-200 p-4 rounded font-mono h-48 overflow-y-scroll\">\n//         {logs.length === 0 ? <div>Logs will appear here...</div> : logs.map((l, i) => <div key={i}>{l}</div>)}\n//       </div>\n\n//       {/* Confirmation */}\n//       {submitted && (\n//         <div className=\"mt-6 text-green-700 font-semibold\">\n//           Complaint submitted successfully!<br />\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VoiceComplaint() {\n  _s();\n  const [complaintData, setComplaintData] = useState(null);\n  const [complaintId, setComplaintId] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleVoiceComplaint = async () => {\n    setLoading(true);\n    setError(\"\");\n    setSubmitted(false);\n    setComplaintData(null);\n    setComplaintId(null);\n    try {\n      // Trigger the voice bot endpoint\n      const voiceRes = await axios.get(\"http://localhost:5000/api/voice-complaint\");\n      if (voiceRes.data.status !== \"success\") {\n        setError(voiceRes.data.message || \"Voice bot error\");\n        return;\n      }\n      const data = voiceRes.data.data;\n      // Map AI data to backend schema expected by ComplaintForm\n      const payload = {\n        name: data[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"] || \"\",\n        location: data[\"‡§∏‡•ç‡§•‡§æ‡§®\"] || \"\",\n        department: data[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"] || \"\",\n        description: data[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"] || \"\"\n      };\n\n      // Submit to the complaint endpoint\n      const res = await axios.post(\"http://localhost:5000/api/complaint\", payload);\n      if (res.data.success) {\n        setComplaintId(res.data.complaintId);\n        setComplaintData(payload);\n        setSubmitted(true);\n      } else {\n        setError(res.data.message || \"Submission failed.\");\n      }\n    } catch (err) {\n      setError(err.message || \"Unexpected error.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto mt-10 p-6 bg-white rounded-lg shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-6\",\n      children: \"\\uD83C\\uDFA4 Voice Complaint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVoiceComplaint,\n      disabled: loading,\n      className: \"bg-blue-600 hover:bg-blue-700 text-white font-medium px-5 py-3 rounded-full transition-opacity disabled:opacity-50 mb-6\",\n      children: loading ? \"Processing...\" : \"Start Voice Complaint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-600 mb-4\",\n      children: [\"\\u274C \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), submitted && complaintData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-50 border border-green-200 p-6 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-green-800 mb-4\",\n        children: \"\\u2705 Complaint Submitted!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Complaint ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 45\n        }, this), \" \", complaintId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2 text-gray-800\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 18\n          }, this), \" \", complaintData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 18\n          }, this), \" \", complaintData.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Department:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 18\n          }, this), \" \", complaintData.department]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 18\n          }, this), \" \", complaintData.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this), !submitted && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"Click the button above and speak your complaint when prompted.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n_s(VoiceComplaint, \"4D59veoMAnHcZpU0b/DimNbIXzY=\");\n_c = VoiceComplaint;\nvar _c;\n$RefreshReg$(_c, \"VoiceComplaint\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","VoiceComplaint","_s","complaintData","setComplaintData","complaintId","setComplaintId","submitted","setSubmitted","loading","setLoading","error","setError","handleVoiceComplaint","voiceRes","get","data","status","message","payload","name","location","department","description","res","post","success","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/soham/Downloads/JantaVoice/frontend/src/pages/VoiceComplaint.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// export default function VoiceComplaint() {\r\n//   const [logs, setLogs] = useState([]);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [complaintId, setComplaintId] = useState(null);\r\n//   const [submitted, setSubmitted] = useState(false);\r\n\r\n//   const appendLog = (line) => {\r\n//     setLogs((prev) => [...prev, line]);\r\n//   };\r\n\r\n//   const handleVoiceComplaint = async () => {\r\n//     setLoading(true);\r\n//     setLogs([\"üéôÔ∏è Voice complaint started...\"]);\r\n//     setSubmitted(false);\r\n//     setComplaintId(null);\r\n\r\n//     try {\r\n//       // 1. Trigger the Python voice bot and get structured data\r\n//       const voiceRes = await axios.get(\"http://localhost:5000/api/voice-complaint\");\r\n//       if (voiceRes.data.status !== \"success\") {\r\n//         appendLog(\"‚ùå Voice bot error: \" + voiceRes.data.message);\r\n//         return;\r\n//       }\r\n\r\n//       const complaintData = voiceRes.data.data;\r\n//       appendLog(\"‚úÖ Voice bot finished. Data:\");\r\n//       appendLog(JSON.stringify(complaintData, null, 2));\r\n\r\n//       // 2. Send that same data to the complaints endpoint\r\n//       const formRes = await axios.post(\r\n//         \"http://localhost:5000/api/complaint\",\r\n//         {\r\n//           name: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"] || complaintData.name,\r\n//           complaint: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"] || complaintData.complaint,\r\n//           location: complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"] || complaintData.location,\r\n//           // map any other fields if needed\r\n//         }\r\n//       );\r\n\r\n//       // 3. Capture and display the Complaint ID\r\n//       const newId = formRes.data.complaintId || formRes.data.complaintId;\r\n//       setComplaintId(newId);\r\n//       setSubmitted(true);\r\n//       appendLog(`üì¨ Complaint submitted. ID: ${newId}`);\r\n//     } catch (err) {\r\n//       appendLog(\"‚ùå Error: \" + err.message);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n//       <h2 className=\"text-2xl font-semibold mb-4\">Voice Complaint</h2>\r\n//       <button\r\n//         onClick={handleVoiceComplaint}\r\n//         disabled={loading}\r\n//         className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50\"\r\n//       >\r\n//         {loading ? \"Processing...\" : \"Start Voice Complaint\"}\r\n//       </button>\r\n\r\n//       <div className=\"mt-6 bg-gray-900 text-green-200 p-4 rounded font-mono h-48 overflow-y-scroll\">\r\n//         {logs.map((line, i) => (\r\n//           <div key={i}>{line}</div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {submitted && (\r\n//         <div className=\"mt-6 text-green-700 font-semibold\">\r\n//           Complaint submitted successfully!<br />\r\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// export default function VoiceComplaint() {\r\n//   // 1. State mirrors ComplaintForm\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     complaint: \"\",\r\n//     location: \"\",\r\n//     urgency: \"normal\",\r\n//   });\r\n\r\n//   const [complaintId, setComplaintId] = useState(null);\r\n//   const [submitted, setSubmitted] = useState(false);\r\n//   const [logs, setLogs] = useState([]);\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   // helper to append to console‚Äëstyle logs\r\n//   const appendLog = (line) => setLogs((prev) => [...prev, line]);\r\n\r\n//   const handleVoiceComplaint = async () => {\r\n//     setLoading(true);\r\n//     setLogs([\"üéôÔ∏è Starting voice complaint...\"]);\r\n//     setSubmitted(false);\r\n//     setComplaintId(null);\r\n\r\n//     try {\r\n//       // 2. Trigger your backend voice route\r\n//       const voiceRes = await axios.get(\"http://localhost:5000/api/voice-complaint\");\r\n//       if (voiceRes.data.status !== \"success\") {\r\n//         appendLog(\"‚ùå Voice bot error: \" + voiceRes.data.message);\r\n//         return;\r\n//       }\r\n\r\n//       // 3. Pull out structured data\r\n//       const data = voiceRes.data.data;\r\n//       appendLog(\"‚úÖ Voice data received:\");\r\n//       appendLog(JSON.stringify(data, null, 2));\r\n\r\n\r\n//       // // 4. Map it into the exact same formData shape\r\n//       // const mapped = {\r\n//       //   name: data[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"] || \"\",\r\n//       //   location: data[\"‡§∏‡•ç‡§•‡§æ‡§®\"] || \"\",\r\n//       //   department: data[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"] || \"\",\r\n//       //   description: data[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"] || \"\",\r\n//       //   urgency: \"normal\",\r\n//       // };\r\n\r\n//       const aiData = voiceRes.data.data;\r\n\r\n//       const payload = {\r\n//         name: aiData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"] || \"\",\r\n//         location: aiData[\"‡§∏‡•ç‡§•‡§æ‡§®\"] || \"\",\r\n//         department: aiData[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"] || \"\",\r\n//         description: aiData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"] || \"\",\r\n//       };\r\n\r\n//       await axios.post(\"http://localhost:5000/api/complaint\", payload);\r\n\r\n\r\n//       setFormData(mapped);\r\n\r\n//       // 5. POST to the same endpoint as ComplaintForm\r\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", mapped);\r\n//       setComplaintId(res.data.complaintId);\r\n//       setSubmitted(true);\r\n//       appendLog(`üì¨ Complaint submitted. ID: ${res.data.complaintId}`);\r\n//     } catch (err) {\r\n//       appendLog(\"‚ùå Submission error: \" + err.message);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n//       <h2 className=\"text-2xl font-semibold mb-4\">Voice Complaint</h2>\r\n\r\n//       {/* Start button */}\r\n//       <button\r\n//         onClick={handleVoiceComplaint}\r\n//         disabled={loading}\r\n//         className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50\"\r\n//       >\r\n//         {loading ? \"Processing...\" : \"Start Voice Complaint\"}\r\n//       </button>\r\n\r\n//       {/* Console logs */}\r\n//       <div className=\"mt-4 bg-gray-900 text-green-200 p-4 rounded font-mono h-48 overflow-y-scroll\">\r\n//         {logs.length === 0 ? <div>Logs will appear here...</div> : logs.map((l, i) => <div key={i}>{l}</div>)}\r\n//       </div>\r\n\r\n//       {/* Confirmation */}\r\n//       {submitted && (\r\n//         <div className=\"mt-6 text-green-700 font-semibold\">\r\n//           Complaint submitted successfully!<br />\r\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function VoiceComplaint() {\r\n  const [complaintData, setComplaintData] = useState(null);\r\n  const [complaintId, setComplaintId] = useState(null);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleVoiceComplaint = async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setSubmitted(false);\r\n    setComplaintData(null);\r\n    setComplaintId(null);\r\n\r\n    try {\r\n      // Trigger the voice bot endpoint\r\n      const voiceRes = await axios.get(\"http://localhost:5000/api/voice-complaint\");\r\n      if (voiceRes.data.status !== \"success\") {\r\n        setError(voiceRes.data.message || \"Voice bot error\");\r\n        return;\r\n      }\r\n\r\n      const data = voiceRes.data.data;\r\n      // Map AI data to backend schema expected by ComplaintForm\r\n      const payload = {\r\n        name: data[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"] || \"\",\r\n        location: data[\"‡§∏‡•ç‡§•‡§æ‡§®\"] || \"\",\r\n        department: data[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"] || \"\",\r\n        description: data[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"] || \"\",\r\n      };\r\n\r\n      // Submit to the complaint endpoint\r\n      const res = await axios.post(\"http://localhost:5000/api/complaint\", payload);\r\n      if (res.data.success) {\r\n        setComplaintId(res.data.complaintId);\r\n        setComplaintData(payload);\r\n        setSubmitted(true);\r\n      } else {\r\n        setError(res.data.message || \"Submission failed.\");\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || \"Unexpected error.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded-lg shadow\">\r\n      <h2 className=\"text-2xl font-semibold mb-6\">üé§ Voice Complaint</h2>\r\n\r\n      <button\r\n        onClick={handleVoiceComplaint}\r\n        disabled={loading}\r\n        className=\"bg-blue-600 hover:bg-blue-700 text-white font-medium px-5 py-3 rounded-full transition-opacity disabled:opacity-50 mb-6\"\r\n      >\r\n        {loading ? \"Processing...\" : \"Start Voice Complaint\"}\r\n      </button>\r\n\r\n      {error && (\r\n        <div className=\"text-red-600 mb-4\">‚ùå {error}</div>\r\n      )}\r\n\r\n      {submitted && complaintData && (\r\n        <div className=\"bg-green-50 border border-green-200 p-6 rounded-lg\">\r\n          <h3 className=\"text-xl font-semibold text-green-800 mb-4\">‚úÖ Complaint Submitted!</h3>\r\n          <p className=\"text-gray-700 mb-2\"><strong>Complaint ID:</strong> {complaintId}</p>\r\n          <div className=\"space-y-2 text-gray-800\">\r\n            <div><strong>Name:</strong> {complaintData.name}</div>\r\n            <div><strong>Location:</strong> {complaintData.location}</div>\r\n            <div><strong>Department:</strong> {complaintData.department}</div>\r\n            <div><strong>Description:</strong> {complaintData.description}</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {!submitted && !error && (\r\n        <p className=\"text-gray-500\">Click the button above and speak your complaint when prompted.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}