{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soham\\\\Downloads\\\\JantaVoice\\\\frontend\\\\src\\\\pages\\\\AdminLogin.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminLogin() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/admin/login\", {\n        username,\n        password\n      }, {\n        withCredentials: true\n      });\n      if (res.data.success) {\n        localStorage.setItem(\"isAdmin\", \"true\"); // ✅ This line ensures protection\n        navigate(\"/admin-dashboard\"); // ✅ Only logged in users allowed\n      } else {\n        setError(res.data.message);\n      }\n    } catch (err) {\n      setError(\"Login failed. Try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen\",\n    children: [\"\\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Admin Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), \"\\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"flex flex-col gap-4 w-64\",\n      children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"border p-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"border p-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-sm\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-600 text-white py-2 rounded\",\n        children: \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 Login \\xA0 \\xA0 \\xA0 \\xA0 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \"\\xA0 \\xA0 \\xA0 \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), \"\\xA0 \\xA0 \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminLogin, \"8wQ/bzn6fk6ET8DFaTQ4y53Fx+Q=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["useState","useNavigate","axios","jsxDEV","_jsxDEV","AdminLogin","_s","username","setUsername","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","res","post","withCredentials","data","success","localStorage","setItem","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/soham/Downloads/JantaVoice/frontend/src/pages/AdminLogin.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function AdminLogin() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\r\n        \"http://localhost:5000/api/admin/login\",\r\n        { username, password },\r\n        { withCredentials: true }\r\n      );\r\n      if (res.data.success) {\r\n        localStorage.setItem(\"isAdmin\", \"true\"); // ✅ This line ensures protection\r\n        navigate(\"/admin-dashboard\"); // ✅ Only logged in users allowed\r\n      } else {\r\n        setError(res.data.message);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Login failed. Try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-screen\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Admin Login</h2>\r\n      <form onSubmit={handleLogin} className=\"flex flex-col gap-4 w-64\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          className=\"border p-2 rounded\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          className=\"border p-2 rounded\"\r\n        />\r\n        {error && <p className=\"text-red-500 text-sm\">{error}</p>}\r\n        <button type=\"submit\" className=\"bg-blue-600 text-white py-2 rounded\">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}