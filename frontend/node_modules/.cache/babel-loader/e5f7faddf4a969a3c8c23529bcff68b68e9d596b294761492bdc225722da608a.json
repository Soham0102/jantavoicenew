{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soham\\\\Downloads\\\\JantaVoice\\\\frontend\\\\src\\\\pages\\\\VoiceComplaint.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceComplaint = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [consoleOutput, setConsoleOutput] = useState([]);\n  const [finalResult, setFinalResult] = useState(null);\n  const handleVoiceComplaint = async () => {\n    setLoading(true);\n    setConsoleOutput([\"Voice complaint started...\"]);\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/voice-complaint\");\n      const data = response.data;\n      if (data.status === \"success\") {\n        const lines = data.data.output.split(\"\\n\");\n        setConsoleOutput(prev => [...prev, ...lines]);\n        setFinalResult(data.data);\n      } else {\n        setConsoleOutput(prev => [...prev, \"Error: \" + data.message]);\n      }\n    } catch (error) {\n      setConsoleOutput(prev => [...prev, \"Request failed: \" + error.message]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Voice Complaint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n      onClick: handleVoiceComplaint,\n      disabled: loading,\n      children: loading ? \"Listening...\" : \"Start Voice Complaint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 bg-black text-green-400 p-4 rounded font-mono h-64 overflow-auto\",\n      children: consoleOutput.map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: line\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), finalResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-semibold\",\n        children: \"Extracted Complaint:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"bg-gray-100 p-2 rounded text-sm\",\n        children: JSON.stringify(finalResult, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceComplaint, \"a1UUdzvuAlQ9G4CMyi3AoEjr/EM=\");\n_c = VoiceComplaint;\nexport default VoiceComplaint;\nvar _c;\n$RefreshReg$(_c, \"VoiceComplaint\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","VoiceComplaint","_s","loading","setLoading","consoleOutput","setConsoleOutput","finalResult","setFinalResult","handleVoiceComplaint","response","get","data","status","lines","output","split","prev","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","line","index","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/soham/Downloads/JantaVoice/frontend/src/pages/VoiceComplaint.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst VoiceComplaint = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [consoleOutput, setConsoleOutput] = useState([]);\r\n  const [finalResult, setFinalResult] = useState(null);\r\n\r\n  const handleVoiceComplaint = async () => {\r\n    setLoading(true);\r\n    setConsoleOutput([\"Voice complaint started...\"]);\r\n\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/voice-complaint\");\r\n      const data = response.data;\r\n\r\n      if (data.status === \"success\") {\r\n        const lines = data.data.output.split(\"\\n\");\r\n        setConsoleOutput((prev) => [...prev, ...lines]);\r\n        setFinalResult(data.data);\r\n      } else {\r\n        setConsoleOutput((prev) => [...prev, \"Error: \" + data.message]);\r\n      }\r\n    } catch (error) {\r\n      setConsoleOutput((prev) => [...prev, \"Request failed: \" + error.message]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-xl font-bold mb-4\">Voice Complaint</h1>\r\n      <button\r\n        className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n        onClick={handleVoiceComplaint}\r\n        disabled={loading}\r\n      >\r\n        {loading ? \"Listening...\" : \"Start Voice Complaint\"}\r\n      </button>\r\n\r\n      <div className=\"mt-4 bg-black text-green-400 p-4 rounded font-mono h-64 overflow-auto\">\r\n        {consoleOutput.map((line, index) => (\r\n          <div key={index}>{line}</div>\r\n        ))}\r\n      </div>\r\n\r\n      {finalResult && (\r\n        <div className=\"mt-4\">\r\n          <h2 className=\"font-semibold\">Extracted Complaint:</h2>\r\n          <pre className=\"bg-gray-100 p-2 rounded text-sm\">\r\n            {JSON.stringify(finalResult, null, 2)}\r\n          </pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceComplaint;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}