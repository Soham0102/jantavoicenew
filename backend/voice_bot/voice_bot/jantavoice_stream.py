from voice_bot_hindi import speak_hindi, listen_hindi
from gemini_ai import ask_gemini_followup_or_result, is_structured_json
from backend.utils.telegram_utils import send_telegram_message
import json
import requests

def stream_voice_complaint():
    conversation = []
    yield "ЁЯдЦ рдмреЛрд▓реЗрдВ: рдирдорд╕реНрддреЗ! рдЬрдирддрд╛рд╡реЙрдЗрд╕ рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИред рдХреГрдкрдпрд╛ рдЕрдкрдиреА рд╕рдорд╕реНрдпрд╛ рдмрддрд╛рдПрдВред"

    while True:
        user_reply = listen_hindi()
        if not user_reply:
            yield "ЁЯдЦ рдореИрдВрдиреЗ рдХреБрдЫ рд╕реБрдирд╛ рдирд╣реАрдВред рдХреГрдкрдпрд╛ рджреЛрд╣рд░рд╛рдПрдВред"
            continue

        conversation.append(f"рдпреВрдЬрд╝рд░: {user_reply}")
        yield f"ЁЯзСтАНЁЯТм рдпреВрдЬрд╝рд░: {user_reply}"

        chat_log = "\n".join(conversation)
        ai_reply = ask_gemini_followup_or_result(chat_log)
        json_result = is_structured_json(ai_reply)

        if json_result:
            summary = json_result.get("рдмреЛрд▓рдиреЗ_рд▓рд╛рдпрдХ_рд╕рд╛рд░рд╛рдВрд╢", "рдЖрдкрдХреА рд╢рд┐рдХрд╛рдпрдд рджрд░реНрдЬ рдХреА рдЧрдИ рд╣реИред")
            yield f"ЁЯдЦ рд╕рд╛рд░рд╛рдВрд╢: {summary}"

            announcement = json_result.get("рдЕрдВрддрд┐рдо_рдШреЛрд╖рдгрд╛", "рдЖрдкрдХреА рд╢рд┐рдХрд╛рдпрдд рд╕рдВрдмрдВрдзрд┐рдд рд╡рд┐рднрд╛рдЧ рдХреЛ рднреЗрдЬ рджреА рдЧрдИ рд╣реИред")
            yield f"ЁЯУв рдШреЛрд╖рдгрд╛: {announcement}"

            yield f"тЬЕ JSON рддреИрдпрд╛рд░:\n{json.dumps(json_result, ensure_ascii=False)}"

            # Send to backend
            try:
                res = requests.post("http://localhost:5000/api/complaints", json=json_result)
                yield f"ЁЯУм Backend рд╕реЗ рдЬрд╡рд╛рдм: {res.json()}"
            except Exception as e:
                yield f"тЭМ Backend Error: {str(e)}"

            # Telegram
            send_telegram_message(json_result, json_result.get("complaint_id", "CMP-UNKNOWN"))

            return

        yield f"ЁЯдЦ рд╕рд┐рд╕реНрдЯрдо: {ai_reply}"
        conversation.append(ai_reply)
